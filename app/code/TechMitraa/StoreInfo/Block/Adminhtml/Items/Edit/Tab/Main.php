<?php
/**
 * @category   TechMitraa
 * @package    TechMitraa_StoreInfo
 * @author     bhavi.techmitraa.@gmail.com
 * @copyright  This file was generated by using Module Creator(http://code.vky.co.in/magento-2-module-creator/) provided by VKY <viky.031290@gmail.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace TechMitraa\StoreInfo\Block\Adminhtml\Items\Edit\Tab;

use Magento\Backend\Block\Widget\Form\Generic;
use Magento\Backend\Block\Widget\Tab\TabInterface;

class Main extends Generic implements TabInterface
{
    protected $_wysiwygConfig;
 
    public function __construct(
        \Magento\Backend\Block\Template\Context $context, 
        \Magento\Framework\Registry $registry, 
        \Magento\Framework\Data\FormFactory $formFactory,  
        \Magento\Cms\Model\Wysiwyg\Config $wysiwygConfig, 
        array $data = []
    ) 
    {
        $this->_wysiwygConfig = $wysiwygConfig;
        parent::__construct($context, $registry, $formFactory, $data);
    }

    /**
     * {@inheritdoc}
     */
    public function getTabLabel()
    {
        return __('Store Information');
    }

    /**
     * {@inheritdoc}
     */
    public function getTabTitle()
    {
        return __('Store Information');
    }

    /**
     * {@inheritdoc}
     */
    public function canShowTab()
    {
        return true;
    }

    /**
     * {@inheritdoc}
     */
    public function isHidden()
    {
        return false;
    }

    /**
     * Prepare form before rendering HTML
     *
     * @return $this
     * @SuppressWarnings(PHPMD.NPathComplexity)
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
     */
    protected function _prepareForm()
    {
        $model = $this->_coreRegistry->registry('current_techmitraa_storeinfo_items');
        /** @var \Magento\Framework\Data\Form $form */
        $form = $this->_formFactory->create();
        $form->setHtmlIdPrefix('store_');
        $fieldset = $form->addFieldset('base_fieldset', ['legend' => __('Store Information')]);

        if ($model->getId()) {
            $fieldset->addField('id', 'hidden', ['name' => 'id']);
        }
        $fieldset->addField(
            'storename',
            'text',
            ['name' => 'storename', 'label' => __('Store Name'), 'title' => __('Store Name'), 'required' => true]
        );
        $fieldset->addField(
            'store_address',
            'textarea',
            ['name' => 'store_address', 'label' => __('Store Address'), 'title' => __('Store Address Line 1'), 'required' => true]
        );       
        $fieldset->addField(
            'phone_number',
            'text',
            ['name' => 'phone_number', 'label' => __('Phone Number'), 'title' => __('Phone Number'), 'required' => true,'class' => 'validate-number']
        );   
        $fieldset->addField(
            'status',
            'select',
            ['name' => 'status', 'label' => __('Status'), 'title' => __('Status'),  'options'   => [0 => 'Disable', 1 => 'Enable'], 'required' => true]
        );

        $timeFormat = $this->_localeDate->getTimeFormat(\IntlDateFormatter::SHORT);
        $dateFormat = $this->_localeDate->getDateFormat(\IntlDateFormatter::SHORT);



        $days = array();
        $days2 =[];
        for ($i = 0; $i < 7; $i++) {
            $days[$i] = jddayofweek($i,1);
            $days2[jddayofweek($i,1)."_From"] = '';
            $days2[jddayofweek($i,1)."_To"] = '';
        }
        $hoursOfOperation = $model->getHoursOfOperation();
        if(isset($hoursOfOperation)) {
            $hoursOfOperation1 = (array)json_decode($hoursOfOperation);
            $finalarray = $hoursOfOperation1;
        } else {
            $finalarray = $days2;
        }

        foreach ($finalarray as $key => $value) {
            $name = str_replace('_', ' ', $key);
            $fieldset->addField(
                $key,
                'date',
                [
                    'name' => $key,
                    'label' => __($name),
                    'title' => __($name),
                    'required' => false,
                    'time_format' => $timeFormat,
                    'date_format'=>$dateFormat,
                    'id' => $key,
                    'time_only'=> true,
                    'values' => '9:42 AM'
                ]
            );
        }

            $fieldset->addField(
            'image',
            'image',
            [
                'name' => 'image',
                'label' => __('Image'),
                'title' => __('Image'),
                'required'  => false
            ]
        );

        $form->setValues($model->getData());
        $this->setForm($form);
        return parent::_prepareForm();
    }
}
